package com.tn.isamm.linkedin.entity;
// Generated Oct 16, 2018 10:34:30 AM by Hibernate Tools 4.3.1


import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonManagedReference;

import java.util.HashSet;
import java.util.Set;
import javax.persistence.*;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * Utilisateur generated by hbm2java
 */
@Entity
@Table(name="utilisateur"
        ,catalog="linkedin2"
)
public class Utilisateur  implements java.io.Serializable {

    private Integer id;
    private String nom;
    private String prenom;
    private String email;
    private String motDePasse;
    private String titreProfil;
    private String pays;
    private int codePostal;
    private String gouvernera;
    private String secteur;
    private String image_path;
    private int role;
    private String description;

    @JsonBackReference
    private Set<OffreEmploi> offreEmplois = new HashSet<OffreEmploi>(0);
    private Set<Message> messagesForIdEnvoyeur = new HashSet<Message>(0);
    private Set<Notification> notifications = new HashSet<Notification>(0);
    private Set<Notification> notifications1 = new HashSet<Notification>(0);
    private Set<Connexion> connexionsForIdUtilisateur2 = new HashSet<Connexion>(0);
    private Set<Connexion> connexionsForIdUtilisateur1 = new HashSet<Connexion>(0);
    private Set<Formation> formations = new HashSet<Formation>(0);
    private Set<Langue> langues = new HashSet<Langue>(0);
    private Set<Competence> competences = new HashSet<Competence>(0);
    private Set<OffreUtilisateur> offreUtilisateurs = new HashSet<OffreUtilisateur>(0);
    private Set<Message> messagesForIdDestinataire = new HashSet<Message>(0);
    private Set<Experience> experiences = new HashSet<Experience>(0);
    private Set<Publication> publications = new HashSet<Publication>(0);
    private Set<Commentaire> commentaires = new HashSet<Commentaire>(0);
    private Set<JAime> JAimes = new HashSet<JAime>(0);

    public Utilisateur() {
    }


    public Utilisateur(String nom, String prenom, String email, String motDePasse, String titreProfil, String pays, int codePostal, String gouvernera, String secteur ,String description, Set<Connexion> connexionsForIdUtilisateur2, Set<Connexion> connexionsForIdUtilisateur1) {
        this.nom = nom;
        this.prenom = prenom;
        this.email = email;
        this.motDePasse = motDePasse;
        this.titreProfil = titreProfil;
        this.pays = pays;
        this.codePostal = codePostal;
        this.gouvernera = gouvernera;
        this.secteur = secteur;
        this.image_path = "https://www.pngarts.com/files/3/Avatar-PNG-Download-Image.png";
        this.description= description;
    }

    public Utilisateur(String nom, String prenom, String email, String motDePasse, String titreProfil, String pays, int codePostal, String gouvernera, String secteur,String description, Set<Message> messagesForIdEnvoyeur, Set<Formation> formations, Set<Competence> competences,Set<Langue> langues, Set<OffreUtilisateur> offreUtilisateurs, Set<Message> messagesForIdDestinataire, Set<Experience> experiences, Set<Publication> publications, Set<Commentaire> commentaires, Set<JAime> JAimes, Set<Notification> notifications,Set<Notification> notifications1 , Set<Connexion> connexionsForIdUtilisateur2, Set<Connexion> connexionsForIdUtilisateur1) {
        this.nom = nom;
        this.prenom = prenom;
        this.email = email;
        this.motDePasse = motDePasse;
        this.titreProfil = titreProfil;
        this.pays = pays;
        this.codePostal = codePostal;
        this.gouvernera = gouvernera;
        this.secteur = secteur;
        this.messagesForIdEnvoyeur = messagesForIdEnvoyeur;
        this.formations = formations;
        this.langues = langues;
        this.connexionsForIdUtilisateur2 = connexionsForIdUtilisateur2;
        this.connexionsForIdUtilisateur1 = connexionsForIdUtilisateur1;
        this.competences = competences;
        this.offreUtilisateurs = offreUtilisateurs;
        this.messagesForIdDestinataire = messagesForIdDestinataire;
        this.experiences = experiences;
        this.publications = publications;
        this.commentaires = commentaires;
        this.notifications = notifications;
        this.notifications1 = notifications1;
        this.JAimes = JAimes;
        this.image_path = "https://www.pngarts.com/files/3/Avatar-PNG-Download-Image.png";
        this.description= description;
    }

    @Id @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    public void setId(Integer id) {
        this.id = id;
    }


    @Column(name="nom", length=50)
    public String getNom() {
        return this.nom;
    }
    public void setNom(String nom) {
        this.nom = nom;
    }

    @Column(name="role")
    public int getRole() {
        return role;
    }
    public void setRole(int role) {
        this.role = role;
    }

    @Column(name="prenom", length=50)
    public String getPrenom() {
        return this.prenom;
    }
    public void setPrenom(String prenom) {
        this.prenom = prenom;
    }


    @Column(name="email", length=80)
    public String getEmail() {
        return this.email;
    }
    public void setEmail(String email) {
        this.email = email;
    }


    @Column(name="mot_de_passe", length=300)
    public String getMotDePasse() {
        return this.motDePasse;
    }
    public void setMotDePasse(String motDePasse) {
        this.motDePasse = motDePasse;
    }


    @Column(name="titre_profil", length=300)
    public String getTitreProfil() {
        return this.titreProfil;
    }
    public void setTitreProfil(String titreProfil) {
        this.titreProfil = titreProfil;
    }


    @Column(name="pays", length=100)
    public String getPays() {
        return this.pays;
    }
    public void setPays(String pays) {
        this.pays = pays;
    }


    @Column(name="code_postal")
    public int getCodePostal() {
        return this.codePostal;
    }
    public void setCodePostal(int codePostal) {
        this.codePostal = codePostal;
    }


    @Column(name="gouvernera", length=300)
    public String getGouvernera() {
        return this.gouvernera;
    }
    public void setGouvernera(String gouvernera) {
        this.gouvernera = gouvernera;
    }


    @Column(name="secteur", length=300)
    public String getSecteur() {
        return this.secteur;
    }
    public void setSecteur(String secteur) {
        this.secteur = secteur;
    }

    @Column(name="description", length=1000)
    public String getDescription() {
        return this.description;
    }
    public void setDescription(String description) {
        this.description = description;
    }


    @OneToMany(fetch=FetchType.LAZY, mappedBy="utilisateurByIdEnvoyeur")
    public Set<Message> getMessagesForIdEnvoyeur() {
        return this.messagesForIdEnvoyeur;
    }
    public void setMessagesForIdEnvoyeur(Set<Message> messagesForIdEnvoyeur) {
        this.messagesForIdEnvoyeur = messagesForIdEnvoyeur;
    }

    @OneToMany(fetch=FetchType.EAGER, mappedBy="utilisateurByIdUtilisateur2")
    @JsonBackReference(value = "u2")
    public Set<Connexion> getConnexionsForIdUtilisateur2() {
        return this.connexionsForIdUtilisateur2;
    }
    public void setConnexionsForIdUtilisateur2(Set<Connexion> connexionsForIdUtilisateur2) {
        this.connexionsForIdUtilisateur2 = connexionsForIdUtilisateur2;
    }

    @OneToMany(fetch=FetchType.EAGER, mappedBy="utilisateurByIdUtilisateur1")
    @JsonBackReference(value = "u1")
    public Set<Connexion> getConnexionsForIdUtilisateur1() {
        return this.connexionsForIdUtilisateur1;
    }
    public void setConnexionsForIdUtilisateur1(Set<Connexion> connexionsForIdUtilisateur1) {
        this.connexionsForIdUtilisateur1 = connexionsForIdUtilisateur1;
    }

    @OneToMany(fetch=FetchType.EAGER, mappedBy="utilisateur")
    @JsonBackReference(value = "fo")
    public Set<Formation> getFormations() {
        return this.formations;
    }
    public void setFormations(Set<Formation> formations) {
        this.formations = formations;
    }


    @OneToMany(fetch=FetchType.EAGER, mappedBy="utilisateur")
    @JsonBackReference(value = "co")
    public Set<Competence> getCompetences() {
        return this.competences;
    }
    public void setCompetences(Set<Competence> competences) {
        this.competences = competences;
    }

    @OneToMany(fetch=FetchType.LAZY, mappedBy="utilisateur")
    @JsonBackReference(value = "lang")
    public Set<Langue> getLangues() {
        return this.langues;
    }
    public void setLangues(Set<Langue> langues) {
        this.langues = langues;
    }

    @OneToMany(fetch=FetchType.EAGER, mappedBy="utilisateur")
    @JsonBackReference(value = "ou")
    public Set<OffreUtilisateur> getOffreUtilisateurs() {
        return this.offreUtilisateurs;
    }
    public void setOffreUtilisateurs(Set<OffreUtilisateur> offreUtilisateurs) {
        this.offreUtilisateurs = offreUtilisateurs; }


    @OneToMany(fetch=FetchType.EAGER, mappedBy="utilisateur")
    @JsonBackReference(value = "no")
    public Set<Notification> getNotifications() {
        return this.notifications;
    }
    public void setNotifications(Set<Notification> notifications) {
        this.notifications = notifications;
    }

    @OneToMany(fetch=FetchType.EAGER, mappedBy="utilisateur1")
    @JsonBackReference(value = "no1")
    public Set<Notification> getNotifications1() {
        return this.notifications1;
    }
    public void setNotifications1(Set<Notification> notifications1) {
        this.notifications1 = notifications1;
    }


    @OneToMany(fetch=FetchType.LAZY, mappedBy="utilisateurByIdDestinataire")
    public Set<Message> getMessagesForIdDestinataire() {
        return this.messagesForIdDestinataire;
    }
    public void setMessagesForIdDestinataire(Set<Message> messagesForIdDestinataire) {
        this.messagesForIdDestinataire = messagesForIdDestinataire; }


    @OneToMany(fetch=FetchType.LAZY, mappedBy="utilisateur")
    @JsonBackReference(value = "exp")
    public Set<Experience> getExperiences() {
        return this.experiences;
    }
    public void setExperiences(Set<Experience> experiences) {
        this.experiences = experiences;
    }


    @OneToMany(fetch=FetchType.EAGER, mappedBy="utilisateur")
    @JsonBackReference(value = "pu")
    public Set<Publication> getPublications() {
        return this.publications;
    }
    public void setPublications(Set<Publication> publications) {
        this.publications = publications;
    }


    @OneToMany(fetch=FetchType.EAGER, mappedBy="utilisateur")
    @JsonBackReference(value = "com")
    public Set<Commentaire> getCommentaires() {
        return this.commentaires;
    }
    public void setCommentaires(Set<Commentaire> commentaires) {
        this.commentaires = commentaires;
    }


    @OneToMany(fetch=FetchType.EAGER, mappedBy="utilisateur")
    @JsonBackReference(value = "getJAimes")
    public Set<JAime> getJAimes() {
        return this.JAimes;
    }
    public void setJAimes(Set<JAime> JAimes) {
        this.JAimes = JAimes;
    }


    @OneToMany(fetch=FetchType.EAGER, mappedBy="utilisateur")
    @JsonBackReference(value = "oe")
    public Set<OffreEmploi> getOffreEmplois() {
        return this.offreEmplois;
    }
    public void setOffreEmplois(Set<OffreEmploi> offreEmplois) {
        this.offreEmplois = offreEmplois;
    }

    public String getImage_path() {
        return image_path;
    }
    public void setImage_path(String image_path) {
        this.image_path = image_path;
    }

}


